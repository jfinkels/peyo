/**
 * Hmmer2Parser.java
 * 
 * Copyright 2010 Jeffrey Finkelstein
 * 
 * This file is part of peyo.
 * 
 * peyo is free software: you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later
 * version.
 * 
 * peyo is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 * 
 * You should have received a copy of the GNU General Public License along with
 * peyo. If not, see <http://www.gnu.org/licenses/>.
 */
package peyo;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

import org.apache.log4j.Logger;

/**
 * A parser which generates {@link HiddenMarkovModel} objects from hidden
 * Markov model files generated by HMMER version 2.
 * 
 * @author Jeffrey Finkelstein
 * @since 0.1
 */
public class Hmmer2Parser {

  /** The Logger for this class. */
  private static final transient Logger LOG = Logger
      .getLogger(Hmmer2Parser.class);

  /**
   * Parses the specified HMMER version 2 hidden Markov model file and returns
   * a {@link HiddenMarkovModel} object.
   * 
   * @param filename
   *          The HMMER version 2 hidden Markov model file.
   * @return A {@link HiddenMarkovModel} object consisting of the information
   *         defined by the input file.
   * @throws FileNotFoundException
   *           If the specified File is not found.
   * @throws IOException
   *           If there is a problem reading lines from the file.
   */
  public static HiddenMarkovModel parse(final String filename)
      throws FileNotFoundException, IOException {
    return parse(new File(filename));
  }

  /**
   * Parses the specified HMMER version 2 hidden Markov model file and returns
   * a {@link HiddenMarkovModel} object.
   * 
   * @param file
   *          The HMMER version 2 hidden Markov model file.
   * @return A {@link HiddenMarkovModel} object consisting of the information
   *         defined by the input file.
   * @throws FileNotFoundException
   *           If the specified File is not found.
   * @throws IOException
   *           If there is a problem reading lines from the file.
   */
  public static HiddenMarkovModel parse(final File file)
      throws FileNotFoundException, IOException {
    final HiddenMarkovModel result = new HiddenMarkovModel();

    LOG.debug("Parsing HMM file: " + file);
    final BufferedReader reader = new BufferedReader(new FileReader(file));

    String line = reader.readLine();

    while (line != null) {
      LOG.debug("current line: " + line);
      if (line.startsWith("LENG")) {
        result.setLength(Integer.parseInt(line.substring(4).trim()));
      }
      
      line = reader.readLine();
    }

    return result;
  }

}
